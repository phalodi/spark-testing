name: CI/CD - Modbus deployment

on:
  push:
    branches:
      - feature*

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
#      - name: Run tests
#        run: sbt test
      - name: Install kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
          chmod +x ./kubectl
      - name: Verify kubectl
        run: |
          echo kubectl install

      - name: Configure kubectl
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          KUBE_CONFIG_TEMPLATE: "apiVersion: v1
                                    clusters:
                                     - cluster:
                                         certificate-authority-data: DATA+OMITTED
                                         server: https://kubernetes.docker.internal:6443
                                       name: docker-desktop
                                     contexts:
                                     - context:
                                         cluster: docker-desktop
                                         user: docker-desktop
                                       name: docker-desktop
                                     - context:
                                         cluster: docker-desktop
                                         user: docker-desktop
                                       name: docker-for-desktop
                                     current-context: docker-desktop
                                     kind: Config
                                     preferences: {}
                                     users:
                                     - name: docker-desktop
                                       user:
                                         client-certificate-data: REDACTED
                                         client-key-data: REDACTED"
        run: |
          echo ::set-env name=KUBECONFIG::$(echo $KUBE_CONFIG_TEMPLATE)
          echo $KUBECONFIG
          echo $KUBE_CONFIG_TEMPLATE
